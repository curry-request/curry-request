{"actions.md":"<h3 id=\"action-setup\">Action setup</h3>\n<p>Preparation of our actions (as controller-actions) is quite terse.</p>\n","config.md":"<h3 id=\"base-configuration\">Base Configuration</h3>\n<p>Curry Request is conceived to centralize the management of api calls to common services (both in Node and in the<br>browser);<br>in the js ecosystem the most popular package for dealing with XHR is Axios, but we weren&#39;t satisfied with it so this module.<br><br/><br>Similar to Axios you can configure instances, and through the pluggable fetch module it can easily implement interceptors.<br><br/><br>Differently from Axios, it is not such a high abstraction,<br>it is built with the assumption that <strong>fetch is good enough</strong>, and it doesn&#39;t transform inputs and outputs so drastically.<br>this is done through a simple curried function, with the fetch parameters ordered for our convenience.</p>\n","http-call.md":"<h3 id=\"http-call\">Http call</h3>\n<p>The returning function is the one that actually makes the http-request,<br>keep in mind that you can supply the optional token value that will be used in authorization header, with the<br><em>Bearer</em> prefix.</p>\n"}